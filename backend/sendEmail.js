const nodemailer = require("nodemailer");
const dotenv = require("dotenv");
dotenv.config();
const { TransportTrips } = require("./config"); // โ Import model directly

const checkAndSendEmails = async () => {
    try {
        console.log("๐ Checking for overdue trips...");

    // โ Query the database directly instead of using fetch()
    const trips = await TransportTrips.findAll({
      where: { aging_date: null }, // Only trips without aging_date
    });

        if (!trips || trips.length === 0) return; // ูุง ุชูุฌุฏ ุจูุงูุงุช ููุชุญูู

        const today = new Date();

        // 2๏ธโฃ ููุชุฑุฉ ุงูุฑุญูุงุช ุงูุชู ูุฑ ุนูููุง 9 ุฃูุงู ูู ุชุงุฑูุฎ ุงูุชุญููู ููุดุฑูุฉ
        const overdueTrips = trips.filter(trip => {
            if (!trip.company_loading_date) return false; // ุชุฃูุฏ ูู ูุฌูุฏ ุงูุชุงุฑูุฎ
            const loadingDate = new Date(trip.company_loading_date);
            const diffDays = Math.floor((today - loadingDate) / (1000 * 60 * 60 * 24));
            return trip.aging_date === null && diffDays >= 9;
        });

        if (overdueTrips.length === 0) return; // ูุง ุชูุฌุฏ ุฑุญูุงุช ูุชุฃุฎุฑุฉ

        // 3๏ธโฃ ุฅุนุฏุงุฏ ุจูุงูุงุช ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุจุฃูุงู ุนุจุฑ ูุชุบูุฑุงุช ุงูุจูุฆุฉ
        const managerEmail = process.env.MANAGER_EMAIL;
        const transporter = nodemailer.createTransport({
            service: "gmail",
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASS,
            },
        });

        // 4๏ธโฃ ุฅุฑุณุงู ุจุฑูุฏ ุฅููุชุฑููู ููู ุฑุญูุฉ ูุชุฃุฎุฑุฉ
        for (const trip of overdueTrips) {
            const mailOptions = {
                from: process.env.EMAIL_USER,
                to: managerEmail,
                subject: "ุชูุจูู: ุฑุญูุฉ ูุชุฃุฎุฑุฉ ุชุญุชุงุฌ ููุชุนุชูู",
                text: `FO: ${trip.fo_number} ุฑุญูุฉ ุฑูู
                ุชุญุชุงุฌ ููุชุนุชููุ ูุฑ ุนูููุง ุฃูุซุฑ ูู 9 ุฃูุงู ููุฐ ุงูุชุญููู.
                ุชูุงุตูู ุงูุฑุญูุฉ:
                ุงูุณุงุฆู: ${trip.driver_name}
                ุงูุฌูุฉ: ${trip.destination}
                ุชุงุฑูุฎ ุงูุชุญููู: ${trip.company_loading_date}
                `,
                html: `
                <p>ุฑุญูุฉ ุฑูู FO: <strong>${trip.fo_number}</strong> ุชุญุชุงุฌ ููุชุนุชููุ ูุฑ ุนูููุง ุฃูุซุฑ ูู 9 ุฃูุงู ููุฐ ุงูุชุญููู.</p>
                <p><strong>ุชูุงุตูู ุงูุฑุญูุฉ:</strong></p>
                <ul>
                    <li><strong>ุงูุณุงุฆู:</strong> ${trip.driver_name} </li>
                    <li><strong>ุงูุฌูุฉ:</strong> ${trip.destination} </li>
                    <li><strong>ุชุงุฑูุฎ ุงูุชุญููู:</strong> ${trip.company_loading_date} </li>
                </ul>
                <p> ูุฑุฌู ุงุชุฎุงุฐ ุงูุฅุฌุฑุงุก ุงููุงุฒู. </p>
                `
            };

            await transporter.sendMail(mailOptions);
            console.log(`๐ง ุชู ุฅุฑุณุงู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ููุฑุญูุฉ ุฑูู FO: ${trip.fo_number}`);
        }
    } catch (error) {
        console.error("โ ุฎุทุฃ ุฃุซูุงุก ุงูุชุญูู ูู ุงูุฑุญูุงุช ุงููุชุฃุฎุฑุฉ:", error);
    }
};

// 5๏ธโฃ ุชุดุบูู ุงููุญุต ุชููุงุฆููุง ุนูุฏ ุฏุฎูู ุงููุณุชุฎุฏู ุจุนุฏ 5 ุซูุงูู
setTimeout(checkAndSendEmails, 10000);

 module.exports = checkAndSendEmails;
